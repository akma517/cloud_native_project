version: '3.7'
services:
  database :
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGERS_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB : "hushush_dev"
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: akma517/configserver:0.0.1-SNAPSHOT
    ports:
       - "8071:8071"
    environment:
      ENCRYPT_KEY: "erc94msaq1re8726qreckelqremcotre"
    networks:
      backend:
        aliases:
          - "configserver"

  licensingservice: # 시작한 서비스에 레이블을 적용, 이 서비스 이름은 도커 인스턴스가 시작할 때 이에 대한 DNS 엔트리가 되며, 다른 서비스가 액세스 하는데 사용된다.
    image: akma517/license:0.0.1-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "erc94msaq1re8726qreckelqremcotre"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
    # ports:
    #   - "8080:8080" # 시작한 도커 컨테이너의 포트 번호 정의 , 이 포트 번호는 외부에 노출
    # environment:
    #   SPRING_PROFILES_ACTIVE : dev # 시작하는 도커 이미지에 환경변수 전달, 
    #                                  # 이 경우 시작하는 도커 이미지에 SPRING_PROFILES_ACTIVE 환경변수를 설정
    #   SPRING_CLOUD_CONFIG_URI : http://localhost:8071
    # networks:
    #   backend:  # 서비스가 속한 네트워크 이름 지정
    #     aliases:
    #       - "licenseservice"  # 네트워크상의 서비스에 대한 대체 호스트 이름을 지정

networks:  
  backend:  # 디폴트 타입은 bridge이며  backend라고 명명된 커스텀 네트워크를 생성
    driver: bridge